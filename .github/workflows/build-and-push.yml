name: Build and Push (Production)

on:
  push:
    tags:
      - v*

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
      image: ${{ steps.tag.outputs.image }}
    steps:
      - uses: actions/checkout@v3

      - name: Get tag value
        id: tag
        run: |
          TAG=${GITHUB_REF#refs/*/}
          echo "Working tag: $TAG"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "image=ghcr.io/math-p-earth/math-grader-frontend:$TAG" >> $GITHUB_OUTPUT

  build-push:
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: ${{ needs.prepare.outputs.tag }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Set frontend env (production)
        run: |
          mv .env.production .env

      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          tags: ${{ needs.prepare.outputs.image }}
          cache-from: type=registry,ref=ghcr.io/math-p-earth/math-grader-frontend:buildcache
          cache-to: type=registry,ref=ghcr.io/math-p-earth/math-grader-frontend:buildcache,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs:
      - prepare
      - build-push

    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        env:
          IMAGE_TAG: ${{ needs.prepare.outputs.tag }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: IMAGE_TAG
          script: |
            cd deploy-configs/math-grader-frontend

            # Copy template compose file
            cp docker-compose.yml.tmpl docker-compose.yml

            # Replace placeholder variables
            sed -i "s|{{IMAGE_TAG}}|$IMAGE_TAG|g" docker-compose.yml
            sed -i "s|{{ENV_FILE}}|env/production.env|g" docker-compose.yml

            # Up compose file
            docker compose pull
            docker compose up -d --remove-orphans

            # Remove compose file
            rm docker-compose.yml

            # Remove all old images
            docker image prune -af
